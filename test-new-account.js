// test-new-account.js - Test complet cr√©ation et connexion nouveau compte
require('dotenv').config();
const mongoose = require('mongoose');
const User = require('./models/user');
const bcrypt = require('bcryptjs');
const uid2 = require('uid2');

async function testNewAccount() {
  try {
    console.log('üß™ TEST CR√âATION ET CONNEXION NOUVEAU COMPTE');
    console.log('=============================================');
    
    await mongoose.connect(process.env.CONNECTION_STRING);
    console.log('‚úÖ MongoDB connect√©');
    
    // Donn√©es du compte de test
    const testEmail = 'test-' + Date.now() + '@gmail.com';
    const testPassword = 'TestPassword123!';
    
    console.log('\n1Ô∏è‚É£ CR√âATION DU COMPTE TEST');
    console.log('Email:', testEmail);
    console.log('Mot de passe:', testPassword);
    
    // Simuler la cr√©ation de compte (comme ton code signup)
    const hash = bcrypt.hashSync(testPassword, 10);
    
    const newUser = new User({
      firstName: 'Test',
      lastName: 'Utilisateur',
      email: testEmail.toLowerCase(),
      password: hash,
      role: 'user',
      addresses: [],
      phone: null,
      termsAccepted: true,
      token: uid2(32),
    });
    
    const savedUser = await newUser.save();
    console.log('‚úÖ Compte cr√©√© avec succ√®s');
    console.log('   - ID:', savedUser._id);
    console.log('   - Hash cr√©√©:', hash.length, 'caract√®res');
    
    // Test de connexion imm√©diat
    console.log('\n2Ô∏è‚É£ TEST DE CONNEXION IMM√âDIATE');
    
    const foundUser = await User.findOne({ email: testEmail }).select('+password');
    
    if (foundUser) {
      console.log('‚úÖ Utilisateur trouv√© pour connexion');
      
      const passwordMatch = bcrypt.compareSync(testPassword, foundUser.password);
      console.log('üîí Test du mot de passe:', passwordMatch ? '‚úÖ SUCC√àS' : '‚ùå √âCHEC');
      
      if (passwordMatch) {
        console.log('\nüéâ TOUT FONCTIONNE PARFAITEMENT !');
        console.log('=====================================');
        console.log('‚úÖ Cr√©ation de compte : OK');
        console.log('‚úÖ Hashage du mot de passe : OK');
        console.log('‚úÖ Sauvegarde en base : OK');
        console.log('‚úÖ Connexion : OK');
        console.log('\nTon syst√®me d\'authentification fonctionne bien pour les nouveaux comptes.');
      } else {
        console.log('‚ùå Probl√®me de connexion d√©tect√©');
      }
    } else {
      console.log('‚ùå Utilisateur non trouv√© apr√®s cr√©ation');
    }
    
    // Nettoyage : supprimer le compte de test
    console.log('\n3Ô∏è‚É£ NETTOYAGE');
    await User.deleteOne({ email: testEmail });
    console.log('üóëÔ∏è Compte de test supprim√©');
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error.message);
  } finally {
    await mongoose.disconnect();
    console.log('\nüîå Test termin√©');
  }
}

testNewAccount();